Q1. JAVA

import java.io.*;

class LowercaseInputStream extends FilterInputStream {
    public LowercaseInputStream(InputStream in) {
        super(in);
    }

    @Override
    public int read() throws IOException {
        int data = super.read();
        return (data == -1 ? data : Character.toLowerCase((char) data));
    }

    @Override
    public int read(byte[] b, int offset, int len) throws IOException {
        int result = super.read(b, offset, len);
        for (int i = offset; i < offset + result; i++) {
            b[i] = (byte) Character.toLowerCase((char) b[i]);
        }
        return result;
    }
}

public class IODecoratorExample {
    public static void main(String[] args) {
        System.out.println("Enter text (Ctrl+Z to end on Windows or Ctrl+D on Unix-like systems):");

        try (BufferedInputStream inputStream = new BufferedInputStream(System.in);
             LowercaseInputStream lowercaseInputStream = new LowercaseInputStream(inputStream);
             InputStreamReader reader = new InputStreamReader(lowercaseInputStream);
             BufferedReader bufferedReader = new BufferedReader(reader)) {

            String line;
            while ((line = bufferedReader.readLine()) != null) {
                System.out.println("Output: " + line);
            }

        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}


Q2. PYTHON

import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris

# Load the Iris dataset
iris = load_iris()
data = iris.data
target = iris.target

# Create a DataFrame for easier plotting using seaborn
import pandas as pd
iris_df = pd.DataFrame(data, columns=iris.feature_names)
iris_df['target'] = target

# Use seaborn to create a scatter plot
sns.set(style="whitegrid")
sns.pairplot(iris_df, hue="target", height=2.5)
plt.show()


Q3. NodeJs

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Registration Form</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
        }

        input {
            width: 100%;
            padding: 8px;
            margin-bottom: 16px;
            box-sizing: border-box;
        }

        button {
            padding: 10px;
            background-color: #4CAF50;
            color: white;
            border: none;
            cursor: pointer;
        }

        button:hover {
            background-color: #45a049;
        }

        #error-message {
            color: red;
            font-weight: bold;
        }
    </style>
</head>
<body>

<h2>Student Registration Form</h2>

<form id="registrationForm">
    <label for="firstName">First Name:</label>
    <input type="text" id="firstName" name="firstName" required>

    <label for="lastName">Last Name:</label>
    <input type="text" id="lastName" name="lastName" required>

    <label for="age">Age:</label>
    <input type="number" id="age" name="age" required>

    <button type="button" onclick="validateForm()">Submit</button>
</form>

<div id="error-message"></div>

<script>
    function validateForm() {
        var firstName = document.getElementById('firstName').value;
        var lastName = document.getElementById('lastName').value;
        var age = document.getElementById('age').value;

        var errorMessage = "";

        // Validate first name and last name
        var nameRegex = /^[a-zA-Z]+$/;
        if (!nameRegex.test(firstName) || !nameRegex.test(lastName)) {
            errorMessage += "First and last names should contain only alphabets.\n";
        }

        // Validate age
        if (isNaN(age) || age < 18 || age > 50) {
            errorMessage += "Age should be a number between 18 and 50.\n";
        }

        // Display error message or submit the form
        var errorMessageDiv = document.getElementById('error-message');
        if (errorMessage !== "") {
            errorMessageDiv.textContent = errorMessage;
        } else {
            errorMessageDiv.textContent = "";
            // Submit the form (you can replace this with your actual form submission logic)
            document.getElementById('registrationForm').submit();
        }
    }
</script>

</body>
</html>
